<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>space.arim.libertybans</groupId>
		<artifactId>bans-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	
	<artifactId>bans-core</artifactId>
	<description>Main implementation of LibertyBans</description>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Automatic-Module-Name>space.arim.libertybans.core</Automatic-Module-Name>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<useModulePath>false</useModulePath>
					<systemPropertyVariables>
						<hsqldb.reconfig_logging>false</hsqldb.reconfig_logging>
						<org.jooq.no-logo>true</org.jooq.no-logo>
						<org.jooq.no-tips>true</org.jooq.no-tips>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<useModulePath>false</useModulePath>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-invoker-plugin</artifactId>
				<configuration>
					<settingsFile>src/it/settings.xml</settingsFile>
					<parallelThreads>2</parallelThreads>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>${hsqldb.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>migrate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<ignoreFutureMigrations>false</ignoreFutureMigrations>
					<validateMigrationNaming>true</validateMigrationNaming>
					<group>true</group>

					<url>jdbc:hsqldb:file:${project.build.directory}/schema-gen/database;shutdown=true</url>
					<driver>org.hsqldb.jdbc.JDBCDriver</driver>
					<user>SA</user>
					<password/>

					<placeholders>
						<tableprefix/>
						<generatedcolumnsuffix/>
						<extratableoptions/>
						<uuidtype>UUID</uuidtype>
						<inettype>VARBINARY(16)</inettype>
						<arbitrarybinarytype>BLOB</arbitrarybinarytype>
					</placeholders>
					<locations>
						<location>filesystem:src/main/resources/database-migrations</location>
						<location>filesystem:src/test/resources/extra-database-migrations-for-codegen</location>
					</locations>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>${hsqldb.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<logging>DEBUG</logging>
					<jdbc>
						<url>jdbc:hsqldb:file:${project.build.directory}/schema-gen/database;shutdown=true</url>
						<driver>org.hsqldb.jdbc.JDBCDriver</driver>
						<user>SA</user>
						<password/>
					</jdbc>
					<generator>
						<database>
							<name>org.jooq.meta.hsqldb.HSQLDBDatabase</name>
							<includes>.*</includes>
							<excludes>flyway_schema_history</excludes>
							<excludes>(?i:information_schema\..*)|(?i:system_lobs\..*)</excludes>
							<inputSchema>PUBLIC</inputSchema>
							<schemaVersionProvider>SELECT :schema_name || '_' || MAX("version") FROM "flyway_schema_history"</schemaVersionProvider>
							<forcedTypes>
								<forcedType>
									<userType>java.util.UUID</userType>
									<binding>space.arim.libertybans.core.database.jooq.UUIDBinding</binding>
									<includeExpression>.*\.(uuid|uuid1|uuid2|victim_uuid)$</includeExpression>
									<includeTypes>^UUID$</includeTypes>
								</forcedType>
								<forcedType>
									<userType>space.arim.libertybans.api.NetworkAddress</userType>
									<converter>space.arim.libertybans.core.database.jooq.NetworkAddressConverter</converter>
									<includeExpression>.*\.(address|victim_address)$</includeExpression>
									<includeTypes>^VARBINARY\(16\)$</includeTypes>
								</forcedType>
								<forcedType>
									<userType>java.time.Instant</userType>
									<converter>space.arim.libertybans.core.database.jooq.InstantConverter</converter>
									<includeExpression>.*\.(updated|start|time)$</includeExpression>
									<includeTypes>^BIGINT$</includeTypes>
								</forcedType>
								<forcedType>
									<userType>java.time.Instant</userType>
									<converter>space.arim.libertybans.core.database.jooq.EndInstantConverter</converter>
									<includeExpression>.*\.(end)$</includeExpression>
									<includeTypes>^BIGINT$</includeTypes>
								</forcedType>
								<forcedType>
									<userType>space.arim.libertybans.api.PunishmentType</userType>
									<converter>space.arim.libertybans.core.database.jooq.PunishmentTypeConverter</converter>
									<!-- https://regex101.com/r/5wZ03R/1/ -->
									<includeExpression>^(punishments\.type|simple_.*\.type|applicable_.*\.type)$</includeExpression>
									<includeTypes>SMALLINT</includeTypes>
								</forcedType>
								<forcedType>
									<userType>space.arim.libertybans.api.Victim.VictimType</userType>
									<converter>space.arim.libertybans.core.database.jooq.VictimTypeConverter</converter>
									<!-- https://regex101.com/r/bXFXQL/1 -->
									<includeExpression>^(victims\.type|simple_.*\.victim_type|applicable_.*\.victim_type)$</includeExpression>
									<includeTypes>^SMALLINT$</includeTypes>
								</forcedType>
								<forcedType>
									<userType>space.arim.libertybans.api.Operator</userType>
									<binding>space.arim.libertybans.core.database.jooq.OperatorBinding</binding>
									<includeExpression>.*\.operator$</includeExpression>
									<includeTypes>^UUID$</includeTypes>
								</forcedType>
								<forcedType>
									<userType>space.arim.libertybans.api.scope.ServerScope</userType>
									<converter>space.arim.libertybans.core.database.jooq.ServerScopeConverter</converter>
									<includeExpression>.*\.scope$</includeExpression>
									<includeTypes>^CHARACTER\ VARYING\(32\)$</includeTypes>
								</forcedType>
							</forcedTypes>
						</database>
						<generate/>
						<target>
							<packageName>space.arim.libertybans.core.schema</packageName>
							<directory>${project.build.directory}/schema-gen/generated-sources</directory>
						</target>
					</generator>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/schema-gen/generated-sources</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>docker-enabled</id>
			<activation>
				<file>
					<exists>/var/run/docker.sock</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>find-available-ports</id>
								<phase>package</phase>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<configuration>
									<minPortNumber>40000</minPortNumber>
									<maxPortNumber>50000</maxPortNumber>
									<portNames>
										<portName>it.mariadb.legacy.port</portName>
										<portName>it.mariadb.modern.port</portName>
										<portName>it.mysql.port</portName>
										<portName>it.postgres.legacy.port</portName>
										<portName>it.postgres.modern.port</portName>
										<portName>it.cockroachdb.port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.37.0</version>
						<configuration>
							<containerNamePattern>%a</containerNamePattern>
							<showLogs>true</showLogs>
							<startParallel>true</startParallel>
							<images>
								<image>
									<name>mariadb:10.3</name>
									<alias>mariadb-legacy</alias>
									<run>
										<env>
											<MARIADB_ALLOW_EMPTY_ROOT_PASSWORD>true</MARIADB_ALLOW_EMPTY_ROOT_PASSWORD>
										</env>
										<ports>
											<port>127.0.0.1:${it.mariadb.legacy.port}:3306</port>
										</ports>
										<wait>
											<time>60000</time>
											<log>Server socket created on IP: '::'</log>
										</wait>
										<volumes>
											<bind>
												<volume>libertybans-build</volume>
											</bind>
										</volumes>
									</run>
								</image>
								<image>
									<name>mariadb:10.6</name>
									<alias>mariadb-modern</alias>
									<run>
										<env>
											<MARIADB_ALLOW_EMPTY_ROOT_PASSWORD>true</MARIADB_ALLOW_EMPTY_ROOT_PASSWORD>
										</env>
										<ports>
											<port>127.0.0.1:${it.mariadb.modern.port}:3306</port>
										</ports>
										<wait>
											<time>60000</time>
											<log>Server socket created on IP: '::'</log>
										</wait>
										<volumes>
											<bind>
												<volume>libertybans-build</volume>
											</bind>
										</volumes>
									</run>
								</image>
								<image>
									<name>mysql:8.0</name>
									<alias>mysql</alias>
									<run>
										<env>
											<MYSQL_ALLOW_EMPTY_PASSWORD>true</MYSQL_ALLOW_EMPTY_PASSWORD>
										</env>
										<ports>
											<port>127.0.0.1:${it.mysql.port}:3306</port>
										</ports>
										<wait>
											<time>60000</time>
											<log>/usr/sbin/mysqld: ready for connections. Version: '8.0.27'  socket: '/var/run/mysqld/mysqld.sock'  port: 3306  MySQL Community Server - GPL</log>
										</wait>
										<volumes>
											<bind>
												<volume>libertybans-build</volume>
											</bind>
										</volumes>
									</run>
								</image>
								<image>
									<name>postgres:12</name>
									<alias>postgresql-legacy</alias>
									<run>
										<env>
											<POSTGRES_PASSWORD>pgpass</POSTGRES_PASSWORD>
										</env>
										<ports>
											<port>127.0.0.1:${it.postgres.legacy.port}:5432</port>
										</ports>
										<wait>
											<time>60000</time>
											<log>listening on IPv4 address "0.0.0.0", port 5432</log>
										</wait>
										<volumes>
											<bind>
												<volume>libertybans-build</volume>
											</bind>
										</volumes>
									</run>
								</image>
								<image>
									<name>postgres:14</name>
									<alias>postgresql-modern</alias>
									<run>
										<env>
											<POSTGRES_PASSWORD>pgpass</POSTGRES_PASSWORD>
										</env>
										<ports>
											<port>127.0.0.1:${it.postgres.modern.port}:5432</port>
										</ports>
										<wait>
											<time>60000</time>
											<log>listening on IPv4 address "0.0.0.0", port 5432</log>
										</wait>
										<volumes>
											<bind>
												<volume>libertybans-build</volume>
											</bind>
										</volumes>
									</run>
								</image>
								<image>
									<name>cockroachdb/cockroach:latest</name>
									<alias>cockroachdb</alias>
									<run>
										<cmd>start-single-node --insecure</cmd>
										<hostname>cockroach</hostname>
										<ports>
											<port>127.0.0.1:${it.cockroachdb.port}:26257</port>
										</ports>
										<wait>
											<time>60000</time>
										</wait>
										<volumes>
											<bind>
												<volume>libertybans-build</volume>
											</bind>
										</volumes>
									</run>
								</image>
							</images>
							<volumes>
								<volume>
									<name>libertybans-build</name>
									<opts>
										<type>tmpfs</type>
										<device>tmpfs</device>
									</opts>
								</volume>
							</volumes>
						</configuration>
						<executions>
							<execution>
								<id>start-database-instances</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>volume-create</goal>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop-database-instances</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
									<goal>volume-remove</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<hsqldb.reconfig_logging>false</hsqldb.reconfig_logging>
								<org.jooq.no-logo>true</org.jooq.no-logo>
								<org.jooq.no-tips>true</org.jooq.no-tips>
								<libertybans.it.mariadb.legacy.port>${it.mariadb.legacy.port}</libertybans.it.mariadb.legacy.port>
								<libertybans.it.mariadb.modern.port>${it.mariadb.modern.port}</libertybans.it.mariadb.modern.port>
								<libertybans.it.mysql.port>${it.mysql.port}</libertybans.it.mysql.port>
								<libertybans.it.postgres.legacy.port>${it.postgres.legacy.port}</libertybans.it.postgres.legacy.port>
								<libertybans.it.postgres.modern.port>${it.postgres.modern.port}</libertybans.it.postgres.modern.port>
								<libertybans.it.cockroachdb.port>${it.cockroachdb.port}</libertybans.it.cockroachdb.port>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<dependencies>
		<!-- Testing dependencies -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
		</dependency>
		<dependency>
			<groupId>net.kyori</groupId>
			<artifactId>adventure-text-serializer-legacy</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.kyori</groupId>
			<artifactId>adventure-text-serializer-plain</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>

		<!-- Internal dependencies -->
		<dependency>
			<groupId>space.arim.libertybans</groupId>
			<artifactId>bans-api</artifactId>
		</dependency>
		<dependency>
			<groupId>space.arim.libertybans</groupId>
			<artifactId>bans-bootstrap</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.inject</groupId>
			<artifactId>jakarta.inject-api</artifactId>
		</dependency>
		<dependency>
			<groupId>space.arim.injector</groupId>
			<artifactId>injector</artifactId>
		</dependency>
		<dependency>
			<groupId>space.arim.jdbcaesar</groupId>
			<artifactId>jdbcaesar</artifactId>
		</dependency>
		<dependency>
			<groupId>space.arim.dazzleconf</groupId>
			<artifactId>dazzleconf-ext-snakeyaml</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>
		<dependency>
			<groupId>space.arim.api</groupId>
			<artifactId>arimapi-chat</artifactId>
		</dependency>
		<dependency>
			<groupId>space.arim.api</groupId>
			<artifactId>arimapi-env</artifactId>
		</dependency>
		<dependency>
			<groupId>space.arim.api</groupId>
			<artifactId>arimapi-util-dazzleconf</artifactId>
		</dependency>
		<dependency>
			<groupId>space.arim.api</groupId>
			<artifactId>arimapi-util-web</artifactId>
		</dependency>
		<dependency>
			<groupId>space.arim.api</groupId>
			<artifactId>arimapi-util-testing</artifactId>
		</dependency>
		<!-- JDBC drivers -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
	</dependencies>
</project>
